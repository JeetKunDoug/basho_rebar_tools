%% -*- mode: erlang; erlang-indent-level: 4; indent-tabs-mode: nil -*-
%% -------------------------------------------------------------------
%%
%% Copyright (c) 2016 Basho Technologies, Inc.
%%
%% This file is provided to you under the Apache License,
%% Version 2.0 (the "License"); you may not use this file
%% except in compliance with the License.  You may obtain
%% a copy of the License at
%%
%%   http://www.apache.org/licenses/LICENSE-2.0
%%
%% Unless required by applicable law or agreed to in writing,
%% software distributed under the License is distributed on an
%% "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
%% KIND, either express or implied.  See the License for the
%% specific language governing permissions and limitations
%% under the License.
%%
%% -------------------------------------------------------------------

%%
%% Adding 'debug_info' in a profile overrides 'no_debug_info'.
%%
{erl_opts, [
    no_auto_import,
    no_debug_info,
    warn_export_all,
    warn_obsolete_guard,
    warn_unused_import,
    warnings_as_errors
]}.

{profiles, [
    %%
    %% This is the default when built as a dependency (plugin).
    %%
    {prod, [
        {erl_opts, [
            {d, brt_prod}
        ]}
    ]},
    %%
    %% For Dialyzer and Xref.
    %% Beware! Running Dialyzer on a rebar plugin from within rebar is a
    %% black art at best - thine eyes may deceive thee.
    %% Full, unpolluted analysis requires somewhat convoluted external
    %% scaffolding which is too environment-specific for inclusion here.
    %%
    {check, [
        {erl_opts, [
            {d, brt_check},
            debug_info
        ]},

        {dialyzer, [
            {warnings, [
                error_handling,
                race_conditions,
                unknown,
                unmatched_returns
            ]},
            {plt_extra_apps, [
                getopt,
                providers,
                rebar
            ]}
        ]},

        {xref_checks, [
            deprecated_function_calls,
            deprecated_functions,
            locals_not_used,
            undefined_function_calls,
            undefined_functions
        ]},

        %% For efficiency in production use, we only have a dependency on rebar
        %% itself in this profile.
        {deps, [
            {rebar,
                {git, "https://github.com/erlang/rebar3.git",
                {branch, "master"} }}
        ]},

        {overrides, [
            {add, getopt,       [{erl_opts, [debug_info]}]},
            {add, providers,    [{erl_opts, [debug_info]}]},
            {add, rebar,        [{erl_opts, [debug_info]}]}
        ]}
    ]},
    %%
    %% This profile allows building the plugin as an escript for development.
    %%
    %% Because the plugin uses rebar's functionality for locating and figuring
    %% out the static dependency tree, compilation, etc., the escript isn't
    %% suitable for production use, though it may be made so in the future for
    %% operations that are difficult to perform within rebar if that becomes
    %% desirable.
    %%
    %% Waring!
    %% The generated escript is not portable. It MUST run from its built
    %% location or the top of this repository tree. In order to make it
    %% portable, brt_escript:consult_app_file/2 has to be implemented - the
    %% other hooks are in place, but this one didn't seem worth the effort at
    %% present.
    %%
    %% For now, brt_escript:run/1 is just augmented as needed as a testbed
    %% for work in progress.
    %%
    {escript, [
        {src_dirs, [
            "src", "escript"
        ]},

        {erl_opts, [
            {d, brt_escript},
            debug_info
        ]},

        {escript_name,      brt},
        {escript_comment,   "%% Escript for LIMITED development testing.\n"},

        %% Include the same emulator args rebar3 uses.
        {escript_emu_args,  "%%! +sbtu +A0 -escript main brt_escript\n"},

        %% Warning!
        %% This uses some undocumented internal magic in rebar to include
        %% resources in the escript - it could change at any time, and is one
        %% more reason NOT to use the escript for anything but development of
        %% the plugin itself!
        {escript_incl_extra, [
            {"basho_rebar_tools/priv/*",    "_build/default/lib/"}
        ]}
    ]},
    %%
    %% Source analysis only, no beams produced.
    %%
    {validate, [
        {erl_opts, [
            {d, brt_validate},
            strong_validation
        ]}
    ]}
]}.
